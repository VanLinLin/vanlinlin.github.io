name: Update Google Scholar Data

on:
  workflow_dispatch:
  schedule:
    - cron: '0 8 * * *'

jobs:
  update-scholar:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Fetch and Process Google Scholar Stats
        env:
          SERPAPI_API_KEY: ${{ secrets.SERPAPI_API_KEY }}
          GOOGLE_SCHOLAR_ID: ${{ secrets.GOOGLE_SCHOLAR_ID }}
        run: |
          echo "🚀 Fetching Google Scholar data using curl..."
          
          # 1. 建立目標資料夾
          mkdir -p google_scholar_crawler/results
          
          # 2. 直接使用 curl 抓取原始的學者資料，並存成 gs_data.json
          curl --location --silent "https://serpapi.com/search.json?engine=google_scholar_author&author_id=${GOOGLE_SCHOLAR_ID}&api_key=${SERPAPI_API_KEY}" > google_scholar_crawler/results/gs_data.json

          # 3. 檢查抓取的資料是否有誤
          if grep -q "error_message" google_scholar_crawler/results/gs_data.json; then
            echo "❌ SERPAPI returned an error:"
            cat google_scholar_crawler/results/gs_data.json
            exit 1
          fi
          echo "✅ Successfully fetched raw author data."

          # 4. 使用 jq 從 gs_data.json 中提取被引用次數 (citations)
          CITATIONS=$(jq '.author.cited_by' google_scholar_crawler/results/gs_data.json)
          if [ -z "$CITATIONS" ] || [ "$CITATIONS" == "null" ]; then
            echo "❌ Could not find citation count in the response."
            exit 1
          fi
          echo "📊 Citation count: $CITATIONS"

          # 5. 使用 jq 建立給 shields.io 使用的 JSON 檔案
          jq -n --arg citations "$CITATIONS" '{schemaVersion: 1, label: "citations", message: $citations}' > google_scholar_crawler/results/gs_data_shieldsio.json
          echo "✅ Successfully created shields.io JSON file."

      - name: Check output
        run: |
          ls -al google_scholar_crawler/results
          echo "--- gs_data.json content ---"
          cat google_scholar_crawler/results/gs_data.json | head -n 10
          echo "--- gs_data_shieldsio.json content ---"
          cat google_scholar_crawler/results/gs_data_shieldsio.json

      - name: Commit and push updated JSON
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@users.noreply.github.com"
          # 使用 -f 強制加入被 .gitignore 忽略的 json 檔案
          git add -f google_scholar_crawler/results/*.json
          # 檢查是否有檔案變動，沒有變動就不提交
          if ! git diff --staged --quiet; then
            git commit -m "🔄 Update Google Scholar stats (via curl)"
            git push
          else
            echo "✅ No changes in Google Scholar stats. Nothing to commit."
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
